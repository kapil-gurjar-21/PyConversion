version: '3.3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pyconversion

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    command: sh -c "sleep 30 && celery -A PyConversion.celery worker --loglevel=info"

  flower:
    image: mher/flower
    container_name: flower
    command: celery flower --persistent=True
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - FLOWER_PORT=8888
    ports:
      - "8888:8888"  
    volumes:
      - flower_data:/data

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
volumes:
  postgres_data:
  flower_data: